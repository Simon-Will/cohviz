{"version":3,"sources":["cmap_revision_delay.js"],"names":["$","TextAnalyzerModel","Backbone","Model","extend","url","url_api_textanalyzer","UserModel","url_api_user_specific","get_experiment_id","TextModelComplete","url_api_textdata","defaults","pre_text","post_text","pre_num_sentences","post_num_sentences","pre_num_clusters","post_num_clusters","pre_num_coherent_sentences","post_num_coherent_sentences","pre_num_non_coherent_sentences","post_num_non_coherent_sentences","pre_page_duration","post_page_duration","pre_num_concepts","post_num_concepts","MeasurementView","View","el","events","click #measurement_instruction-button","click #measurement_measurement-input-button","click #measurement_measurement-review-send-button","keyup #measurement_measurement-review-text textarea","initialize","self","this","toggle_text","prePageDurationStart","postPageDurationStart","instruction_template","_","template","html","input_template","loading_template","review_template","text_save_error_template","user_model","text_complete_model","analyzer","fetch","success","renderInstruction","error","console","log","$el","instruction","get","renderExperiment","Date","window_height","window","height","input_div","textarea","focus","find","reviseText","textareaText","val","set","analyzeText","elapsed","text","replace","save","response","renderSVG","model","responseText","sendData","review_div","hide","setTimeout","show","setContainerHeight","css","current_height","svgHeight","svgWidth","width","renderCmap","textarea_view","analyzePostText","clear","foundation","saveDataMeasurement","location","reload","ModalView","click #measurement_send-button","sendPostText","myview"],"mappings":"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","file":"cmap_revision_delay.js","sourcesContent":["(function($) {\n\n    // ===================== Experiment Model =================\n    var TextAnalyzerModel = Backbone.Model.extend({\n        url: url_api_textanalyzer\n    });\n\n    // ===================== User Model =======================\n    var UserModel = Backbone.Model.extend({\n        url: url_api_user_specific + get_experiment_id()\n    });\n\n    // ==================== Text Model Complete ===============\n    var TextModelComplete = Backbone.Model.extend({\n        \n        url: url_api_textdata + get_experiment_id(),\n\n        defaults: {\n            \"pre_text\": null,\n            \"post_text\": null,\n            \"pre_num_sentences\": null,\n            \"post_num_sentences\": null,\n            \"pre_num_clusters\": null,\n            \"post_num_clusters\": null,\n            \"pre_num_coherent_sentences\": null,\n            \"post_num_coherent_sentences\": null,\n            \"pre_num_non_coherent_sentences\": null,\n            \"post_num_non_coherent_sentences\": null,\n            \"pre_page_duration\": null,\n            \"post_page_duration\": null,\n            \"pre_num_concepts\": null,\n            \"post_num_concepts\": null\n        }\n    });\n\n    // ================== My View =======================\n    var MeasurementView = Backbone.View.extend({\n\n        el: $('.measurement'),\n\n        events: {\n            \"click #measurement_instruction-button\": \"renderExperiment\",\n            \"click #measurement_measurement-input-button\": \"analyzeText\",\n            // \"click #measurement_measurement-review-toggle-button\": \"toggleText\",\n            \"click #measurement_measurement-review-send-button\": \"sendData\",\n            \"keyup #measurement_measurement-review-text textarea\": \"reviseText\",\n        },\n\n        initialize: function() {\n\n            // Variable declaration\n            var self = this;\n            this.toggle_text = false;\n            this.prePageDurationStart = null;\n            this.postPageDurationStart = null;\n\n            // Initialize templates\n            this.instruction_template = _.template($('#measurement_measurement-instruction-template').html());\n            this.input_template =  _.template($('#measurement_measurement-input-text-template').html());\n            this.loading_template = _.template($('#loading-ring-template').html());\n            this.review_template = _.template($('#measurement_measurement-review-template').html());\n            this.text_save_error_template = _.template($('#measurement_error').html());\n\n            // Initialize models\n            this.user_model = new UserModel();\n            this.text_complete_model = new TextModelComplete();\n            this.analyzer = new TextAnalyzerModel();\n\n            // Fetch user data\n            this.user_model.fetch({\n                success: function() {\n                    self.renderInstruction();\n                },\n                error: function() {\n                    console.log(\"error fetching user data\");\n                }\n            });\n\n        },\n\n        renderInstruction: function() {\n            // Render input div\n            this.$el.html(this.instruction_template({'instruction': this.user_model.get('instruction')}));\n        },\n\n        renderExperiment: function() {\n\n            // Start time\n            this.prePageDurationStart = new Date();\n\n            // Render input template\n            this.$el.html(this.input_template());\n\n            // Render divs according to windows height\n            var window_height = $(window).height();\n\n            // Input div\n            var input_div = $('#measurement_measurement-input');\n\n            // Render input div\n            input_div.html(this.input_template());\n\n            // Focus textarea\n            var textarea = $('#measurement_measurement-input-textarea');\n            textarea.focus();\n\n            // Set heights for input elements\n            $('#measurement_measurement-input').find(\"textarea\").height(window_height * 0.6);\n\n        },\n\n        reviseText: function() {\n\n            // Get textarea\n            var textareaText = $('#measurement_measurement-review-text').find('textarea').val();\n\n            // Set post-text\n            this.text_complete_model.set({'post_text': textareaText});\n\n        },\n\n        analyzeText: function() {\n\n            // Set duration for pre page\n            var elapsed = (new Date() - this.prePageDurationStart) / 1000;\n            this.text_complete_model.set({'pre_page_duration': elapsed});\n\n            // Start timer for pre page\n            this.postPageDurationStart = new Date();\n\n            var self = this;\n\n            // Get text from textarea\n            var text = $('textarea#measurement_measurement-input-textarea').val();\n\n            // Remove line breaks from text\n            text = text.replace(/(\\r\\n|\\n|\\r)/gm,\" \");\n\n            // Set text to analyzer\n            this.analyzer.set({'text': text});\n\n            // Render loading ring\n            this.$el.html(this.loading_template());\n\n            // Get text data\n            this.analyzer.save(null, {\n                success: function(response) {\n                    self.renderSVG();\n                },\n                error: function(model, response) {\n                    console.log(response.responseText);\n                }\n            });\n        },\n\n        // toggleText: function() {\n\n        //     // Get dom elements\n        //     var container = $('#measurement_measurement-review-text');\n        //     var button = $('#measurement_measurement-review-toggle-button');\n\n        //     // Textarea not visible\n        //     if (!this.toggle_text) {\n\n        //         var current_height = container.height();\n\n        //         button.text(\"Bearbeitung schließen\");\n\n        //         this.toggle_text = true;\n        //         container.html(\"<textarea>\" + this.text_complete_model.get('post_text') + \"</textarea>\");\n        //         container.find('textarea').height(current_height);\n        //     // Textarea visible\n        //     } else {\n        //         button.text(\"Bearbeiten\");\n        //         container.html(\"<p>\" + this.text_complete_model.get('pre_text') + \"</p>\");\n        //         this.toggle_text = false;\n        //         this.setContainerHeight();\n        //     }\n        // },\n\n        sendData: function() {\n\n            // Set duration for review process\n            var elapsed = (new Date() - this.postPageDurationStart) / 1000;\n            this.text_complete_model.set({'post_page_duration': elapsed});\n\n        },\n\n        renderSVG: function() {\n\n            // Save pre_text data\n            this.text_complete_model.set({'pre_text': this.analyzer.get('text'),\n                'pre_num_sentences': this.analyzer.get('numSentences'),\n                'pre_num_clusters': this.analyzer.get('numClusters'),\n                'pre_num_coherent_sentences': this.analyzer.get('cohSentences'),\n                'pre_num_non_coherent_sentences': this.analyzer.get('cohNotSentences'),\n                'pre_num_concepts': this.analyzer.get('numConcepts'),\n                'post_text': this.analyzer.get('text')});\n\n            // Render review template\n            this.$el.html(this.review_template({'text': this.analyzer.get('text')}));\n\n            // Hide Review div\n            var review_div = $('#measurement_review-div');\n            review_div.hide();\n\n            // Show review div after 300 seconds\n            window.setTimeout(function() {\n                review_div.show(1000, 'swing');\n            }, 60000);\n\n            // Set height of container\n            this.setContainerHeight();\n            \n            // Change padding\n            this.$el.css('padding-top', \"10px\");\n            this.$el.css('padding-left', '15px');\n\n            // Set width and height of svg\n            var current_height = $(window).height();\n            var svgHeight = current_height * 0.95;\n            var svgWidth = $('#measurement_measurement-graph').width();\n\n            // Render SVG\n            renderCmap(this.analyzer.get('word_pairs'), this.analyzer.get('clusters'),\n                this.analyzer.get('numClusters'), '#measurement_measurement-graph',\n                svgHeight, svgWidth);\n\n        },\n\n        setContainerHeight: function() {\n\n            var textarea_view = $('#measurement_measurement-review-text').find('textarea');\n            var current_height = $(window).height();\n            textarea_view.height(current_height * 0.83);\n        },\n\n        analyzePostText: function() {\n            \n            var self = this;\n\n            // Clear analyzer model\n            this.analyzer.clear();\n\n            // Set text to analyzer\n            this.analyzer.clear();\n            this.analyzer.set({'text': this.text_complete_model.get('post_text')});\n\n            // Close modal\n            $('#measurement_modal').foundation('close');\n\n            // // Render loading ring\n            this.$el.html(this.loading_template());\n\n            // Change padding\n            this.$el.css('padding-top', \"60px\");\n\n            // Get text data\n            this.analyzer.save(null, {\n                success: function(response) {\n                    self.saveDataMeasurement();\n                },\n                error: function(model, response) {\n                    console.log(\"error\");\n                }\n            });\n        },\n\n        saveDataMeasurement: function() {\n\n            // Save post text data\n            this.text_complete_model.set({'post_num_sentences': this.analyzer.get('numSentences'),\n                'post_num_clusters': this.analyzer.get('numClusters'),\n                'post_num_coherent_sentences': this.analyzer.get('cohSentences'),\n                'post_num_non_coherent_sentences': this.analyzer.get('cohNotSentences'),\n                'post_num_concepts': this.analyzer.get('numConcepts')});\n\n            // Save data to server\n            this.text_complete_model.save(null, {\n                success: function(response) {\n                    // Reload page\n                    location.reload();\n                },\n                error: function(model, response) {\n                    this.$el.html(text_save_error_template());\n                }\n            });\n        }\n    });\n\n    // ===================== ModalView =================================\n    var ModalView = Backbone.View.extend({\n\n        el: $('#measurement_modal'),\n\n        events: {\n            \"click #measurement_send-button\": \"sendPostText\",\n        },\n\n        initialize: function() {\n        },\n\n        sendPostText: function() {\n            myview.analyzePostText();\n        }\n    });\n\n    // ================== Initialize ModalView ==========================\n    var myview = new MeasurementView();\n    var modalView = new ModalView();\n\n})($);\n//# sourceMappingURL=data:application/json;base64,\n"],"sourceRoot":"/source/"}