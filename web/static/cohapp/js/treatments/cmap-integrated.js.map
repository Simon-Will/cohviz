{"version":3,"sources":["cmap-integrated.js"],"names":["app","CmapView","Backbone","View","extend","el","events","click #instruction-read","click #help","click #editor-button","click #editor-full-button","mouseover #editor-full-medium-editor span","mouseout #editor-full-medium-editor span","initialize","self","this","prePageDurationStart","postPageDurationStart","colors","d3","scaleOrdinal","schemeCategory10","simulations","userModel","UserSpecificModel","textModel","TextModelComplete","analyzer","TextAnalyzerModel","fetch","success","model","response","renderInstruction","error","console","log","$el","html","Handlebars","templates","instruction","get","renderEditor","Date","editor","MediumEditor","toolbar","placeholder","$","editableElement","document","querySelector","firstChild","selectElement","append","renderInstructionModal","openModal","analyzeText","regExText","text","getParagraphs","find","length","Materialize","toast","draftElapsed","set","pre_page_duration","pre_text","save","renderRevision","responseText","pre_num_sentences","pre_num_clusters","pre_num_coherent_sentences","pre_num_non_coherent_sentences","pre_num_concepts","pre_local_cohesion","paragraphs","constants","simpleRevisionModal","svgWidth","width","svgHeight","height","renderCmap","saveText","revisionElapsed","replace","post_text","post_page_duration","sendToServer","post_num_sentences","post_num_clusters","post_num_coherent_sentences","post_num_non_coherent_sentences","post_num_concepts","post_local_cohesion","location","reload","pairs","clust","numClusters","svgID","runSimulation","currentCluster","clusterIndex","mouseover","mouseOverObject","nodeSelected","mouse","g","select","id","nodeData","data","textSelected","style","svg","selectAll","d","isConnected","source","target","wordsRelated","each","push","orthos","map","obj","concat","apply","highlightSelectedWord","a","b","isConnectedAsTarget","isConnectedAsSource","index","linkedByIndex","zoomed","attr","event","transform","cluster","graph","getLinksNodes","simulation","forceSimulation","nodes","force","forceManyBody","strength","forceLink","links","distance","forceCenter","forceX","forceY","stop","call","zoom","scaleExtent","on","loading","timeout","remove","i","n","Math","ceil","alphaMin","alphaDecay","tick","link","enter","x","y","node","mouseout","paragraph","textParagraph","spanText","jquerySpan","clusters","onTextHover","e","hoveredElement","currentTarget","innerText","lemmasForWord","indexOfCluster","key","word","onTextHoverOff"],"mappings":"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","file":"cmap-integrated.js","sourcesContent":["var app = app || {};\n\n\napp.CmapView = Backbone.View.extend({\n\n    el: '#treatment-cmap-integrated',\n\n    events: {\n        'click #instruction-read': 'renderEditor',\n        'click #help': 'renderInstructionModal',\n        'click #editor-button': 'analyzeText',\n        'click #editor-full-button': 'saveText',\n        'mouseover #editor-full-medium-editor span': 'onTextHover',\n        'mouseout #editor-full-medium-editor span': 'onTextHoverOff',\n    },\n\n    initialize: function() {\n      // Variable declaration\n      var self = this;\n      this.prePageDurationStart = null;\n      this.postPageDurationStart = null;\n\n      // Generate 20 distinct colors for the cmap\n      this.colors = d3.scaleOrdinal(d3.schemeCategory10);\n\n      // this simulations\n      this.simulations = {};\n\n      // Get user data\n      this.userModel = new app.UserSpecificModel();\n\n      // Init textanalyzer model\n      this.textModel = new app.TextModelComplete();\n\n      // Init textAnalyzer model\n      this.analyzer = new app.TextAnalyzerModel();\n\n      // Fetch user data\n      this.userModel.fetch({\n          success: function(model, response) {\n              self.renderInstruction();\n          },\n          error: function(model, response) {\n              console.log(response);\n          }\n      });\n\n    },\n\n    /** Render instruction for\n      * this part of the experiment\n      */\n    renderInstruction: function() {\n      // Render instruction\n      this.$el.html(\n          Handlebars.templates.instruction({'instruction':\n              this.userModel.get('instruction')}));\n    },\n\n    /**\n     * When user has read the instruction he or she is able\n     * to write their text.\n     */\n    renderEditor: function() {\n        // Start timer for draft\n        this.prePageDurationStart = new Date();\n\n        // Render editor\n        this.$el.html(Handlebars.templates.editor());\n\n        // Enable editor functionality\n        var editor = new MediumEditor('#editor-textinput', {\n            toolbar: false,\n            placeholder: false,\n        });\n\n        // Add text to editor\n        $('#editor-textinput').html('<p>Schreibe hier ...</p>');\n\n        // Select text so that user can type instantly\n        var editableElement = document.\n            querySelector('#editor-textinput').firstChild;\n        editor.selectElement(editableElement);\n\n        // Append help button to window\n        this.$el.append('<i id=\"help\" class=\"material-icons\">help</i>');\n\n        // Append modal\n        this.$el.append(Handlebars.templates['modal-help']({'instruction':\n            this.userModel.get('instruction') }));\n    },\n\n    /**\n     * Render modal of instruction\n     */\n    renderInstructionModal: function() {\n        $('#modal-help').openModal();\n    },\n\n    /**\n     * After user has written his or her text the\n     * user gets feedback on the draft.\n     * Before users can see the feedback we need\n     * to make some sanity checks whether the\n     * text is long enough.\n     */\n    analyzeText: function() {\n        var self = this;\n\n        // Change text with major concepts\n        app.regExText('#editor-textinput');\n\n        // Get text\n        var text = app.getParagraphs(this.$el.find('#editor-textinput'));\n\n        // Check if text is long enough\n        if (text.length < 1000) {\n            // Display toast\n            Materialize.toast('Ihr Text ist leider zu kurz.', 4000);\n        } else {\n            // Stop timer for draft\n            var draftElapsed = (new Date() - this.prePageDurationStart) / 1000;\n\n            // Start timer for text revision\n            this.postPageDurationStart = new Date();\n\n            // Set draft time and draftText to textModel\n            this.textModel.set({'pre_page_duration': draftElapsed,\n                                'pre_text': text});\n\n            // Render loading ring\n            this.$el.find('#editor-button-div').html(\n                Handlebars.templates['loading-ring']());\n\n            // Get text data\n            this.analyzer.set({'text': text});\n            this.analyzer.save(null, {\n                success: function(response) {\n                    self.renderRevision();\n                },\n                error: function(model, response) {\n                    console.log(response.responseText);\n                }\n            });\n        }\n    },\n\n\n    /**\n     * After user has written the draft she gets the\n     * opportunity to revise her text\n     */\n    renderRevision: function() {\n        var self = this;\n\n        // Render submit button\n        this.$el.find('#editor-button-div').html(\n                '<a class=\"waves-effect waves-light btn\" id=\"save-text\">Text abschicken</a>');\n\n        // Save data for draft\n        this.textModel.set({'pre_text': this.analyzer.get('text'),\n            'pre_num_sentences': this.analyzer.get('numSentences'),\n            'pre_num_clusters': this.analyzer.get('numCluster'),\n            'pre_num_coherent_sentences': this.analyzer.get('cohSentences'),\n            'pre_num_non_coherent_sentences': this.analyzer.get('cohNotSentences'),\n            'pre_num_concepts': this.analyzer.get('numConcepts'),\n            'pre_local_cohesion': this.analyzer.get('local cohesion')});\n\n        // Get inner html of text input\n        this.paragraphs = $('#editor-textinput').html();\n\n        // Change inner html\n        this.$el.html(Handlebars.templates['editor-full']({'instruction':\n            app.constants.simpleRevisionModal}));\n\n        //  Append help button to window\n        this.$el.append('<i id=\"help\" class=\"material-icons\">help</i>');\n\n        // Append modal\n        this.$el.append(Handlebars.templates['modal-help']({'instruction':\n            this.userModel.get('instructionreview') }));\n\n        // Change inner html of editor\n        $('#editor-full-medium-editor').html(this.paragraphs);\n\n        // Enable editor functionality\n        var editor = new MediumEditor('#editor-full-medium-editor', {\n            toolbar: false,\n        });\n\n        // Change text of Button\n        $('#editor-full-button').text('Text abschicken');\n\n        // Display modal\n        this.$el.append(Handlebars.templates['modal-help']({'instruction':\n            this.userModel.get('instructionreview')}));\n        $('#modal-help').openModal();\n\n        // Set width of height of svg element\n        var svgWidth = $('#editor-full-graph').width();\n        var svgHeight = $('#editor-full-medium-editor').height();\n\n        // Render graph\n        this.renderCmap(this.analyzer.get('word_pairs'),\n            this.analyzer.get('clusters'), this.analyzer.get('numClusters'),\n            '#editor-full-graph', svgHeight, svgWidth, this.colors);\n    },\n\n\n    saveText: function() {\n        var self = this;\n\n        // Get seconds subject worked for revision\n        var revisionElapsed = (new Date() - this.postPageDurationStart) / 1000;\n\n        // Render loading ring\n        this.$el.find('#editor-full-button-div').html(\n            Handlebars.templates['loading-ring']());\n\n        // Get text\n        var text = app.getParagraphs(this.$el.find('#editor-full-medium-editor'));\n\n        // Remove unnecessary white spaces\n        text = text.replace(/\\s\\,/g, ',');\n        text = text.replace(/\\s\\./g, '.');\n        text = text.replace(/\\s!/g, '!');\n        text = text.replace(/\\[\\s/g, '[');\n        text = text.replace(/\\s&/g, '&');\n        text = text.replace(/\\s`/g, '`');\n        text = text.replace(/\\s~/g, '~');\n        text = text.replace(/\\s;/g, ';');\n        text = text.replace(/\\s_/g, '_');\n        text = text.replace(/\\s]/g, ']');\n        text = text.replace(/\\s:/g, ':');\n        text = text.replace(/\\s\\?/g, '?');\n        text = text.replace(/\\(\\s/g, '(');\n        text = text.replace(/\\s\\)/g, ')');\n        text = text.replace(/\\s\\//g, '/');\n\n        // Save post text to textModel\n        this.textModel.set({'post_text': text,\n                            'post_page_duration': revisionElapsed});\n\n        // Set text to analyzer\n        this.analyzer.set({'text': text});\n\n        // Fetch data\n        this.analyzer.save(null, {\n            success: function(response) {\n                self.sendToServer();\n            },\n            error: function(model, response) {\n                console.log(response.responseText);\n            }\n        });\n    },\n\n    sendToServer: function() {\n        // Save last data\n        this.textModel.set({'post_num_sentences': this.analyzer.get('numSentences'),\n            'post_num_clusters': this.analyzer.get('numCluster'),\n            'post_num_coherent_sentences': this.analyzer.get('cohSentences'),\n            'post_num_non_coherent_sentences': this.analyzer.get('cohNotSentences'),\n            'post_num_concepts': this.analyzer.get('numConcepts'),\n            'post_local_cohesion': this.analyzer.get('local cohesion')});\n\n        // Send data to server\n        this.textModel.save(null, {\n            success: function(response) {\n                // Reload page\n                location.reload();\n            },\n            error: function(model, response) {\n                console.log('error');\n            }\n        });\n    },\n\n\n    renderCmap: function(pairs, clust, numClusters, svgID, height, width, colors)  {\n      var self = this;\n      var svgHeight = height / 2;\n      var svgWidth = width / 2;\n      var margin = {top: 0, right: 0, bottom: 0, left: 0};\n\n      /**\n       * Closure\n       * @param  {[type]} currentCluster [description]\n       * @return {[type]}                [description]\n       */\n      function runSimulation(currentCluster, clusterIndex) {\n        // Save temporary cluster\n        var cluster = currentCluster;\n\n        // Get data for force simulation with\n        // nodes and links\n        var graph = app.getLinksNodes(cluster);\n\n        // Create svg\n        var svg = d3.select(svgID).append(\"svg\");\n          // .attr(\"width\", svgWidth + margin.left + margin.right)\n          // .attr(\"height\", svgHeight + margin.top + margin.bottom);\n\n        // Create force simulation\n        var simulation = d3.forceSimulation(graph.nodes)\n          .force('charge', d3.forceManyBody().strength(-240))\n          .force('link', d3.forceLink(graph.links)\n            .distance(200)\n            .id(function(d) {\n              return d.id;\n            }))\n          // .force(\"collide\", d3.forceCollide().radius(function(d) { return d.r + 1.5; }).iterations(2))\n          .force('center', d3.forceCenter(svgWidth / 2, svgHeight / 2))\n          .force('x', d3.forceX())\n          .force('y', d3.forceY())\n          .stop();\n\n        // Wrap everything in g element\n        var g = svg.append('g');\n\n        // Stores all links\n        var linkedByIndex = {};\n\n        // Call zoom\n        svg.call(d3.zoom()\n          .scaleExtent([1 / 10, 10])\n          .on('zoom', zoomed));\n\n        var loading = svg.append(\"text\")\n          .attr(\"dy\", \"0.35em\")\n          .attr(\"text-anchor\", \"middle\")\n          .attr(\"font-family\", \"sans-serif\")\n          .attr(\"font-size\", 10)\n          .attr('x', svgWidth / 2)\n          .attr('y', svgHeight / 2)\n          .text(\"Simulating. One moment please…\");\n\n        // Run simulation in the background\n        d3.timeout(function() {\n          loading.remove();\n\n          // See https://github.com/d3/d3-force/blob/master/README.md#simulation_tick\n          for (var i = 0, n = Math.ceil(Math.log(simulation.alphaMin()) / Math.log(1 - simulation.alphaDecay())); i < n; ++i) {\n            simulation.tick();\n          }\n\n          // Add links\n          var link = g.append('g')\n            .attr('class', 'links')\n            .selectAll('line')\n            .data(graph.links)\n            .enter().append('line')\n            .attr(\"x1\", function(d) { return d.source.x; })\n            .attr(\"y1\", function(d) { return d.source.y; })\n            .attr(\"x2\", function(d) { return d.target.x; })\n            .attr(\"y2\", function(d) { return d.target.y; });\n\n          link.each(function(d) {\n            linkedByIndex[d.source.index + \",\" + d.target.index] = true;\n          });\n\n          // Add data of simulation globally\n          self.simulations[clusterIndex] = {'simulation': simulation, 'linkedByIndex': linkedByIndex, 'svg': svg};\n\n          // Create g element that stores\n          // circles and text and call dragging on it\n          var node = g.append('g')\n            .attr('class', 'nodes')\n            .selectAll('.node')\n            .data(graph.nodes)\n            .enter().append('g')\n            .attr('id', function(d, i) {\n              return 'node-' + d.id;\n            })\n            .attr('class', 'node')\n            .attr('transform', function(d) {\n              return 'translate(' + d.x + ',' + d.y + ')';\n            })\n            .on('mouseover', mouseover)\n            .on('mouseout', mouseout);\n\n          // Append circle\n          var circle = node.append('circle')\n            .attr('r', 10)\n            .attr('cx', 0)\n            .attr('cy', 0)\n            .attr('fill', '#ccc');\n\n          // Append label to node container\n          var label = node.append('text')\n            .attr('dy', -10)\n            .attr('dx', 12)\n            .style('opacity', 0.8)\n            .attr('text-anchor', 'start')\n            .text(function(d) {\n              return d.id;\n            });\n        });\n\n        function mouseover(mouseOverObject) {\n          // Get data\n          var mouse = d3.mouse(this);\n\n          // Select element that is hovered\n          var nodeSelected = g.select('#node-' + mouseOverObject.id);\n          var nodeData = nodeSelected.data()[0];\n\n          // Change text of selected element\n          var textSelected = nodeSelected.select('text')\n            .style('opacity', 1)\n            .style('font-weight', 'bold');\n\n          // Highlight adjacent nodes\n          svg.selectAll('text')\n            .style('opacity', function(d) {\n             if (isConnected(nodeData, d)) {\n               return 1;\n             }\n\n             return 0.1;\n\n            });\n\n          svg.selectAll('circle')\n            .style('fill', function(d) {\n              if (isConnected(nodeData, d)) {\n                return '#000';\n              }\n\n              return '#f4f4f4';\n            })\n            .style('opacity', function(d) {\n              if (isConnected(nodeData, d)) {\n                return 1;\n              }\n\n              return 0.2;\n            });\n\n          /////////////////////\n          // Highlight links //\n          /////////////////////\n          svg.selectAll('line')\n            .style('stroke', function(d) {\n              return d.source.id === nodeData.id || d.target.id === nodeData.id ? '#4c4c4c' : '#f4f4f4';\n            });\n\n          /////////////////////////////\n          // Highlight words in text //\n          /////////////////////////////\n\n          // We need to get the text of the selected word in order\n          // to highlight them\n          var wordSelected = textSelected.text();\n\n          // Get all words that are semantically related\n          // to the selected word\n          var wordsRelated = [];\n\n          svg.selectAll('text')\n           .each(function(d) {\n             if (isConnected(nodeData, d)) {\n               wordsRelated.push(d);\n             }\n           });\n\n          // Get all words and corresponding orthoForms\n          // console.log(self.analyzer.toJSON());\n          var lemmaWordRelations = self.analyzer.get('lemmaWordRelations');\n          var orthos = wordsRelated.map(function(obj) {\n            return self.analyzer.get('lemmaWordRelations')[obj.id];\n          });\n\n          orthos = [].concat.apply([], orthos);\n\n          app.highlightSelectedWord('#editor-full-medium-editor', orthos);\n        }\n\n        function isConnected(a, b) {\n          return isConnectedAsTarget(a, b) || isConnectedAsSource(a, b) || a.index == b.index;\n        }\n\n        function isConnectedAsSource(a, b) {\n          return linkedByIndex[a.index + \",\" + b.index];\n        }\n\n        function isConnectedAsTarget(a, b) {\n          return linkedByIndex[b.index + \",\" + a.index];\n        }\n\n        function zoomed() {\n          g.attr('transform', d3.event.transform);\n        }\n      }\n\n      // Store clusters temporarily\n      var clusters = this.analyzer.get('clusters');\n\n      // Create svg for each cluster\n      for (var i = 0; i < clusters.length; i++) {\n        runSimulation(clusters[i], i);\n      }\n\n      function mouseout() {\n        $('#editor-full-medium-editor').find('p').each(function(paragraph) {\n          var textParagraph = $(this).text();\n          // Wrap everything in span elements\n          var spanText = textParagraph.replace(/([A-z0-9'<>\\u00dc\\u00fc\\u00e4\\u00c4\\u00f6\\u00d6\\u00df\\-/]+)/g, '<span>$1</span>');\n\n          var jquerySpan = $(spanText);\n\n          // Generate spans for text\n          $(this).html(jquerySpan);\n          $(this).append('.');\n        });\n\n        // Get all nodes\n        var nodes = d3.selectAll('.node');\n\n        nodes.selectAll('text')\n           .style('opacity', 0.8)\n           .style('font-weight', 'normal');\n\n        d3.selectAll('circle')\n          .style('fill', '#ccc')\n          .style('opacity', 1);\n\n        d3.selectAll('.links').selectAll('line')\n         .style('stroke', '#ccc');\n      }\n    },\n\n    onTextHover: function(e) {\n      // Get span element that is hovered\n      var hoveredElement = e.currentTarget.innerText;\n\n      // Get lemmas for word\n      var lemmasForWord = this.analyzer.get('wordLemmaRelations')[hoveredElement];\n\n      // Is element in Data?\n      if (lemmasForWord) {\n        // Get cluster of word\n\n        // Loop over every cluster and see in which cluster the word is\n        var clusters = this.analyzer.get('clusters');\n        var indexOfCluster = null;\n\n        for (var key in clusters) {\n          clusters[key].map(function(d, i) {\n            var source = d.source.word;\n            var target = d.target.word;\n\n            if (hoveredElement == source || hoveredElement == target) {\n              indexOfCluster = key;\n            }\n          });\n        }\n\n        var linkedByIndex = this.simulations[indexOfCluster].linkedByIndex;\n        var svg = this.simulations[indexOfCluster].svg;\n\n        // Get selected word\n        var nodeSelected = d3.select('#node-' + lemmasForWord[0]);\n        var nodeData = nodeSelected.data()[0];\n\n        // Change text of selected element\n        var textSelected = nodeSelected.select('text')\n          .style('opacity', 1)\n          .style('font-weight', 'bold');\n\n        // Highlight adjacent nodes\n        svg.selectAll('text')\n          .style('opacity', function(d) {\n           if (isConnected(nodeData, d)) {\n             return 1;\n           }\n\n           return 0.1;\n\n          });\n\n        svg.selectAll('circle')\n          .style('fill', function(d) {\n            if (isConnected(nodeData, d)) {\n              return '#000';\n            }\n\n            return '#f4f4f4';\n          })\n          .style('opacity', function(d) {\n            if (isConnected(nodeData, d)) {\n              return 1;\n            }\n\n            return 0.2;\n          });\n\n        /////////////////////\n        // Highlight links //\n        /////////////////////\n        svg.selectAll('line')\n          .style('stroke', function(d) {\n            return d.source.id === nodeData.id || d.target.id === nodeData.id ? '#4c4c4c' : '#f4f4f4';\n          });\n      }\n\n      function isConnected(a, b) {\n        return isConnectedAsTarget(a, b) || isConnectedAsSource(a, b) || a.index == b.index;\n      }\n\n      function isConnectedAsSource(a, b) {\n        return linkedByIndex[a.index + \",\" + b.index];\n      }\n\n      function isConnectedAsTarget(a, b) {\n        return linkedByIndex[b.index + \",\" + a.index];\n      }\n    },\n\n    onTextHoverOff: function(e) {\n      // var gElement = d3.selectAll('g');\n\n      // gElement.select('circle')\n      //   .style('fill', '#ccc');\n\n      // gElement.select('text')\n      //   .style('font-weight', 'normal');\n\n      d3.selectAll('text')\n         .style('opacity', 0.8)\n         .style('font-weight', 'normal');\n\n      d3.selectAll('circle')\n        .style('fill', '#ccc')\n        .style('opacity', 1);\n\n      d3.selectAll('.links').selectAll('line')\n       .style('stroke', '#ccc');\n    },\n\n\n});\n\nnew app.CmapView();\n\n//# sourceMappingURL=data:application/json;base64,\n"],"sourceRoot":"/source/"}