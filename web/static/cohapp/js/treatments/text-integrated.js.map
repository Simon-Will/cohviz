{"version":3,"sources":["text-integrated.js"],"names":["app","TextIntegratedView","Backbone","View","extend","el","events","click #instruction-read","click #help","click #editor-button","click #editor-full-button","initialize","self","this","prePageDurationStart","postPageDurationStart","colors","d3","scaleOrdinal","schemeCategory10","userModel","UserSpecificModel","textModel","TextModelComplete","analyzer","TextAnalyzerModel","fetch","success","model","response","renderInstruction","error","console","log","$el","html","Handlebars","templates","instruction","get","renderEditor","Date","editor","MediumEditor","toolbar","placeholder","$","editableElement","document","querySelector","firstChild","selectElement","append","renderInstructionModal","openModal","analyzeText","regExText","text","getParagraphs","find","length","Materialize","toast","draftElapsed","set","pre_page_duration","pre_text","save","renderRevision","responseText","pre_num_sentences","pre_num_clusters","pre_num_coherent_sentences","pre_num_non_coherent_sentences","pre_num_concepts","paragraphs","highlightWholeText","saveText","revisionElapsed","post_text","post_page_duration","sendToServer","post_num_sentences","post_num_clusters","post_num_coherent_sentences","post_num_non_coherent_sentences","post_num_concepts","location","reload"],"mappings":"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","file":"text-integrated.js","sourcesContent":["var app = app || {};\n\napp.TextIntegratedView = Backbone.View.extend({\n    \n    el: '#treatment-text-integrated',\n\n    events: {\n        'click #instruction-read': 'renderEditor',\n        'click #help': 'renderInstructionModal',\n        'click #editor-button': 'analyzeText',\n        'click #editor-full-button': 'saveText',\n    },\n\n    initialize: function() {\n        // Variable declaration\n        var self = this;\n        this.prePageDurationStart = null;\n        this.postPageDurationStart = null;\n\n        // Generate 20 distinct colors for the cmap\n        this.colors = d3.scaleOrdinal(d3.schemeCategory10);\n        \n        // Get user data\n        this.userModel = new app.UserSpecificModel();\n\n        // Init textanalyzer model\n        this.textModel = new app.TextModelComplete();\n\n        // Init textAnalyzer model\n        this.analyzer = new app.TextAnalyzerModel();\n\n        // Fetch user data\n        this.userModel.fetch({\n            success: function(model, response) {\n                self.renderInstruction();\n            },\n            error: function(model, response) {\n                console.log(response);\n            }\n        });\n    },\n\n    /** Render instruction for \n      * this part of the experiment\n      */\n    renderInstruction: function() {\n        // Render instruction\n        this.$el.html(\n            Handlebars.templates.instruction({'instruction':\n                this.userModel.get('instruction')}));\n    },\n\n    /** \n     * When user has read the instruction he or she is able\n     * to write their text.\n     */\n    renderEditor: function() {\n        // Start timer for draft\n        this.prePageDurationStart = new Date();\n\n        // Render editor\n        this.$el.html(Handlebars.templates.editor());\n\n        // Enable editor functionality\n        var editor = new MediumEditor('#editor-textinput', {\n            toolbar: false,\n            placeholder: false,\n        });\n\n        // Add text to editor\n        $('#editor-textinput').html('<p>Schreibe hier ...</p>');\n\n        // Select text so that user can type instantly\n        var editableElement = document.\n            querySelector('#editor-textinput').firstChild;\n        editor.selectElement(editableElement);\n\n        // Append help button to window\n        this.$el.append('<i id=\"help\" class=\"material-icons\">help</i>');\n\n        // Append modal \n        this.$el.append(Handlebars.templates['modal-help']({'instruction':\n            this.userModel.get('instruction') }));\n    },\n\n    /**\n     * Render modal of instruction\n     */\n    renderInstructionModal: function() {\n        $('#modal-help').openModal();\n    },\n\n    /**\n     * After user has written his or her text the \n     * user gets feedback on the draft. \n     * Before users can see the feedback we need \n     * to make some sanity checks whether the \n     * text is long enough.\n     */\n    analyzeText: function() {\n        var self = this;\n\n        // Change text with major concepts\n        app.regExText('#editor-textinput');\n\n        // Get text\n        var text = app.getParagraphs(this.$el.find('#editor-textinput'));\n\n        // Check if text is long enough\n        if (text.length < 1000) {\n            // Display toast\n            Materialize.toast('Ihr Text ist leider zu kurz.', 4000);\n        } else {\n            // Stop timer for draft\n            var draftElapsed = (new Date() - this.prePageDurationStart) / 1000;\n\n            // Start timer for text revision\n            this.postPageDurationStart = new Date();\n\n            // Set draft time and draftText to textModel\n            this.textModel.set({'pre_page_duration': draftElapsed,\n                                'pre_text': text});\n\n            // Render loading ring\n            this.$el.find('#editor-button-div').html(\n                Handlebars.templates['loading-ring']());\n\n            // Get text data\n            this.analyzer.set({'text': text});\n            this.analyzer.save(null, {\n                success: function(response) {\n                    self.renderRevision();\n                },\n                error: function(model, response) {\n                    console.log(response.responseText);\n                }\n            });\n        }\n    },\n\n    /**\n     * After user has written the draft she gets the \n     * opportunity to revise her text\n     */\n    renderRevision: function() {\n        var self = this;\n\n        // Render submit button\n        this.$el.find('#editor-button-div').html(\n                '<a class=\"waves-effect waves-light btn\" id=\"save-text\">Text abschicken</a>');\n\n        // Save data for draft\n        this.textModel.set({'pre_text': this.analyzer.get('text'),\n            'pre_num_sentences': this.analyzer.get('numSentences'),\n            'pre_num_clusters': this.analyzer.get('numClusters'),\n            'pre_num_coherent_sentences': this.analyzer.get('cohSentences'),\n            'pre_num_non_coherent_sentences': this.analyzer.get('cohNotSentences'),\n            'pre_num_concepts': this.analyzer.get('numConcepts')});\n\n        // Get inner html of text input\n        this.paragraphs = $('#editor-textinput').html();\n\n        // Change inner html\n        this.$el.html(Handlebars.templates['double-text-editor']);\n\n        // Change inner html of editor\n        $('#editor-edit').html(this.paragraphs);\n        $('#editor-visualize-text').html(this.paragraphs);\n\n        // Append help button to window\n        this.$el.append('<i id=\"help\" class=\"material-icons\">help</i>');\n\n        // Append modal \n        this.$el.append(Handlebars.templates['modal-help']({'instruction':\n            this.userModel.get('instructionreview') }));\n\n        // Highlight text\n        app.highlightWholeText('#editor-visualize-text', this.analyzer.get('clusters'),\n            self.colors);\n\n        // Enable editor functionality\n        var editor = new MediumEditor('#editor-edit', {\n            toolbar: false,\n        });\n\n        // Change text of Button\n        $('#editor-full-button').text('Text abschicken');\n\n        // Display modal\n        this.$el.append(Handlebars.templates['modal-revision']({'instruction':\n            this.userModel.get('instructionreview')}));\n        \n        $('#modal-revision').openModal();\n\n    },\n\n    saveText: function() {\n        var self = this;\n\n        // Get seconds subject worked for revision\n        var revisionElapsed = (new Date() - this.postPageDurationStart) / 1000;\n\n        // Render loading ring\n        this.$el.find('#editor-full-button-div').html(\n            Handlebars.templates['loading-ring']());\n\n        // Get text\n        var text = app.getParagraphs(this.$el.find('#editor-edit'));\n\n        // Save post text to textModel\n        this.textModel.set({'post_text': text,\n                            'post_page_duration': revisionElapsed});\n\n        // Set text to analyzer\n        this.analyzer.set({'text': text});\n\n        // Fetch data\n        this.analyzer.save(null, {\n            success: function(response) {\n                self.sendToServer();\n            },\n            error: function(model, response) {\n                console.log(response.responseText);\n            }\n        });\n    },\n\n    sendToServer: function() {\n        // Save last data \n        this.textModel.set({'post_num_sentences': this.analyzer.get('numSentences'),\n            'post_num_clusters': this.analyzer.get('numClusters'),\n            'post_num_coherent_sentences': this.analyzer.get('cohSentences'),\n            'post_num_non_coherent_sentences': this.analyzer.get('cohNotSentences'),\n            'post_num_concepts': this.analyzer.get('numConcepts')});\n        \n        // Send data to server\n        this.textModel.save(null, {\n            success: function(response) {\n                // Reload page\n                location.reload();\n            },\n            error: function(model, response) {\n                console.log('error');\n            }\n        });\n    }\n\n});\n\nnew app.TextIntegratedView();\n\n//# sourceMappingURL=data:application/json;base64,\n"],"sourceRoot":"/source/"}