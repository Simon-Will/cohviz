{"version":3,"sources":["cmap.js"],"names":["app","CmapView","Backbone","View","extend","el","events","click #instruction-read","click #help","click #editor-button","click #editor-full-button","initialize","self","this","prePageDurationStart","postPageDurationStart","colors","d3","scaleOrdinal","schemeCategory10","userModel","UserSpecificModel","textModel","TextModelComplete","analyzer","TextAnalyzerModel","fetch","success","model","response","renderInstruction","error","console","log","$el","html","Handlebars","templates","instruction","get","renderEditor","Date","editor","MediumEditor","toolbar","placeholder","$","editableElement","document","querySelector","firstChild","selectElement","append","renderInstructionModal","openModal","analyzeText","regExText","text","getParagraphs","find","length","Materialize","toast","draftElapsed","set","pre_page_duration","pre_text","save","renderRevision","responseText","pre_num_sentences","pre_num_clusters","pre_num_coherent_sentences","pre_num_non_coherent_sentences","pre_num_concepts","paragraphs","constants","simpleRevisionModal","svgWidth","width","svgHeight","height","renderCmap","pairs","clust","numClusters","svgID","zoomed","g","attr","event","transform","ticked","link","d","source","x","y","target","node","dragstarted","active","simulation","alphaTarget","restart","fx","fy","dragged","dragended","mouseout","each","paragraph","textParagraph","nodes","selectAll","style","mouseover","mouse","obj","nodeSelected","filter","id","select","isConnected","nodeUnselected","a","b","isConnectedAsTarget","isConnectedAsSource","index","linkedByIndex","clusters","graph","getLinksNodes","margin","window","top","right","bottom","left","svg","forceSimulation","force","forceLink","forceManyBody","strength","forceCenter","forceCollide","iterations","call","zoom","scaleExtent","on","data","links","enter","drag","word","i","inArray","saveText","revisionElapsed","post_text","post_page_duration","sendToServer","post_num_sentences","post_num_clusters","post_num_coherent_sentences","post_num_non_coherent_sentences","post_num_concepts","location","reload"],"mappings":"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","file":"cmap.js","sourcesContent":["var app = app || {};\n\n\napp.CmapView = Backbone.View.extend({\n\n    el: '#treatment-cmap',\n\n\tevents: {\n        'click #instruction-read': 'renderEditor',\n\t\t'click #help': 'renderInstructionModal',\n\t\t'click #editor-button': 'analyzeText',\n\t\t'click #editor-full-button': 'saveText',\n\t},\n\n\tinitialize: function() {\n        // Variable declaration\n        var self = this;\n        this.prePageDurationStart = null;\n        this.postPageDurationStart = null;\n\n\t\t// Generate 20 distinct colors for the cmap\n\t\tthis.colors = d3.scaleOrdinal(d3.schemeCategory10);\n        \n        // Get user data\n        this.userModel = new app.UserSpecificModel();\n\n        // Init textanalyzer model\n        this.textModel = new app.TextModelComplete();\n\n        // Init textAnalyzer model\n        this.analyzer = new app.TextAnalyzerModel();\n\n        // Fetch user data\n        this.userModel.fetch({\n            success: function(model, response) {\n                self.renderInstruction();\n            },\n            error: function(model, response) {\n                console.log(response);\n            }\n        });\n\n\t},\n\n    /** Render instruction for \n      * this part of the experiment\n      */\n\trenderInstruction: function() {\n        // Render instruction\n        this.$el.html(\n            Handlebars.templates.instruction({'instruction':\n                this.userModel.get('instruction')}));\n\t},\n\n\t/** \n     * When user has read the instruction he or she is able\n     * to write their text.\n     */\n    renderEditor: function() {\n        // Start timer for draft\n        this.prePageDurationStart = new Date();\n\n        // Render editor\n        this.$el.html(Handlebars.templates.editor());\n\n        // Enable editor functionality\n        var editor = new MediumEditor('#editor-textinput', {\n            toolbar: false,\n            placeholder: false,\n        });\n\n        // Add text to editor\n        $('#editor-textinput').html('<p>Schreibe hier ...</p>');\n\n        // Select text so that user can type instantly\n        var editableElement = document.\n            querySelector('#editor-textinput').firstChild;\n        editor.selectElement(editableElement);\n\n        // Append help button to window\n        this.$el.append('<i id=\"help\" class=\"material-icons\">help</i>');\n\n        // Append modal \n        this.$el.append(Handlebars.templates['modal-help']({'instruction':\n            this.userModel.get('instruction') }));\n    },\n\n    /**\n     * Render modal of instruction\n     */\n    renderInstructionModal: function() {\n        $('#modal-help').openModal();\n    },\n\n    /**\n     * After user has written his or her text the \n     * user gets feedback on the draft. \n     * Before users can see the feedback we need \n     * to make some sanity checks whether the \n     * text is long enough.\n     */\n    analyzeText: function() {\n        var self = this;\n\n        // Change text with major concepts\n        app.regExText('#editor-textinput');\n\n        // Get text\n        var text = app.getParagraphs(this.$el.find('#editor-textinput'));\n\n        // Check if text is long enough\n        if (text.length < 1000) {\n            // Display toast\n            Materialize.toast('Ihr Text ist leider zu kurz.', 4000);\n        } else {\n            // Stop timer for draft\n            var draftElapsed = (new Date() - this.prePageDurationStart) / 1000;\n\n            // Start timer for text revision\n            this.postPageDurationStart = new Date();\n\n            // Set draft time and draftText to textModel\n            this.textModel.set({'pre_page_duration': draftElapsed,\n                                'pre_text': text});\n\n            // Render loading ring\n            this.$el.find('#editor-button-div').html(\n                Handlebars.templates['loading-ring']());\n\n            // Get text data\n            this.analyzer.set({'text': text});\n            this.analyzer.save(null, {\n                success: function(response) {\n                    self.renderRevision();\n                },\n                error: function(model, response) {\n                    console.log(response.responseText);\n                }\n            });\n        }\n    },\n\n\n    /**\n     * After user has written the draft she gets the \n     * opportunity to revise her text\n     */\n    renderRevision: function() {\n\t\tvar self = this;\n\n        // Render submit button\n        this.$el.find('#editor-button-div').html(\n                '<a class=\"waves-effect waves-light btn\" id=\"save-text\">Text abschicken</a>');\n\n        // Save data for draft\n        this.textModel.set({'pre_text': this.analyzer.get('text'),\n            'pre_num_sentences': this.analyzer.get('numSentences'),\n            'pre_num_clusters': this.analyzer.get('numClusters'),\n            'pre_num_coherent_sentences': this.analyzer.get('cohSentences'),\n            'pre_num_non_coherent_sentences': this.analyzer.get('cohNotSentences'),\n            'pre_num_concepts': this.analyzer.get('numConcepts')});\n\n\t\t// Get inner html of text input\n\t\tthis.paragraphs = $('#editor-textinput').html();\n\n        // Change inner html\n        this.$el.html(Handlebars.templates['editor-full']({'instruction':\n            app.constants.simpleRevisionModal}));\n\n        // Append help button to window\n        this.$el.append('<i id=\"help\" class=\"material-icons\">help</i>');\n\n        // Append modal \n        this.$el.append(Handlebars.templates['modal-help']({'instruction':\n            this.userModel.get('instructionreview') }));\n\n        // Change inner html of editor\n        $('#editor-full-medium-editor').html(this.paragraphs);\n\n        // Enable editor functionality\n        var editor = new MediumEditor('#editor-full-medium-editor', {\n\t\t\ttoolbar: false,\n\t\t});\n\n        // Change text of Button\n        $('#editor-full-button').text('Text abschicken');\n\n\t\t// Display modal\n        this.$el.append(Handlebars.templates['modal-revision']({'instruction':\n            this.userModel.get('instructionreview')}));\n        $('#modal-revision').openModal();\n\n        // Set width of height of svg element\n        var svgWidth = $('#editor-full-graph').width();\n\t\tvar svgHeight = $('#editor-full-medium-editor').height();\n\n\t\t// Render graph\n\t\tthis.renderCmap(this.analyzer.get('word_pairs'),\n\t\t\tthis.analyzer.get('clusters'), this.analyzer.get('numClusters'),\n\t\t\t'#editor-full-graph', svgHeight, svgWidth, this.colors);\n    },\n\n\n\trenderCmap: function(pairs, clust, numClusters, svgID, height, width, colors)  {\n        var self = this;\n    \n        // ****************** Render SVG ***************************************\n        // Variable declaration\n        var clusters = clust;\n        var lemmaDic = this.analyzer.get('lemmaDic');\n        var graph = app.getLinksNodes(pairs);\n\n        // // Adjust height of svg\n        var svgHeight = height;\n        var svgWidth = width;\n        var windowHeight = $(window).height();\n\n        // Set margin and width\n        var margin = {top: 0, right: 0, bottom: 0, left: 0};\n\n        // Select svg\n        var svg = d3.select(svgID).append(\"svg\")\n            .attr(\"width\", svgWidth + margin.left + margin.right)\n            .attr(\"height\", svgHeight + margin.top + margin.bottom);\n\n        // Append rectangle to svg\n        var rect = svg.append(\"rect\")\n            .attr(\"width\", svgWidth)\n            .attr(\"height\", svgHeight)\n            .style(\"fill\", \"none\")\n            .style(\"pointer-events\", \"all\");\n\n        // Create new force simulation\n        var simulation = d3.forceSimulation()\n            .force('link', d3.forceLink().id(function(d) {\n                return d.id;\n            }))\n            .force('charge', d3.forceManyBody().strength(50))\n            .force('center', d3.forceCenter(svgWidth / 2, svgHeight / 2))\n            .force('collide', d3.forceCollide(40).iterations(60));\n\n        ///////////////////////////////\n        // Enable zoom functionality //\n        ///////////////////////////////\n        \n        // Call zoom\n        svg.call(d3.zoom()\n            .scaleExtent([1 / 10, 10])\n            .on('zoom', zoomed));\n\n        // Wrap everything in g element\n        var g = svg.append('g')\n            .on('mouseover', mouseover)\n            .on('mouseout', mouseout);\n\n        /**\n         * Zoom function\n         */\n        function zoomed() {\n            g.attr('transform', d3.event.transform);\n        }\n        \n        // Add links\n        var link = g.append('g')\n            .attr('class', 'links')\n            .selectAll('line')\n            .data(graph.links)\n            .enter().append('line');\n\n        // Create g element that stores\n        // circles and text and call dragging on it\n        var node = g.append('g')\n            .attr('class', 'nodes')\n            .selectAll('.node')\n            .data(graph.nodes)\n            .enter().append('g')\n            .attr('class', 'node')\n            .call(d3.drag()\n                .on('start', dragstarted)\n                .on('drag', dragged)\n                .on('end', dragended));\n        \n        // Append cirles to node\n        var circles = node.append('circle')\n            // .attr('class', 'nodes')\n            .attr('r', 15)\n            .attr('cx', 0)\n            .attr('cy', 0)\n            // .attr('ry', 2)\n            .style(\"fill\", function (word) {\n                // Loop over every cluster\n                for (var i = 0; i < clusters.length; i++) {\n                    // Check if current word is in current Array\n                    if ($.inArray(word.id, clusters[i]) != -1) {\n                        // Return color if word war found in array\n                        return colors(i);\n                    }\n                }\n            })\n            .style('opacity', 0.6);\n\n        // Append label to node container\n        var label = node.append('text')\n            .attr('dy', '-.35em')\n            .attr('dx', '1.4em')\n            .text(function(d) {\n                return d.id;\n            });\n\n        // Add nodes to simulation\n        simulation\n            .nodes(graph.nodes)\n            .on('tick', ticked);\n\n        // Add links to simulation\n        simulation.force('link')\n            .links(graph.links);\n\n        var linkedByIndex = {};\n            link.each(function(d) {\n                linkedByIndex[d.source.index + \",\" + d.target.index] = true;\n            });\n\n        /**\n         * Tick function adds x and y\n         * coordinates to nodes and links\n         */\n        function ticked() {\n            // Update links\n            link\n                .attr('x1', function(d) { return d.source.x; })\n                .attr('y1', function(d) { return d.source.y; })\n                .attr('x2', function(d) { return d.target.x; })\n                .attr('y2', function(d) { return d.target.y; });\n\n            // Update nodes\n            node.attr('transform', function(d) {\n                return 'translate(' + d.x + ',' + d.y + ')';\n            });\n        }\n\n        function dragstarted(d) {\n            if (!d3.event.active) simulation.alphaTarget(0.3).restart();\n            d.fx = d.x;\n            d.fy = d.y;\n        }\n\n        function dragged(d) {\n            d.fx = d3.event.x;\n            d.fy = d3.event.y;\n        }\n\n        function dragended(d) {\n            if (!d3.event.active) simulation.alphaTarget(0);\n            d.fx = null;\n            d.fy = null;\n        }\n\n        function mouseout() {\n            $('#editor-full-medium-editor').find('p').each(function(paragraph) {\n                var textParagraph = $(this).text();\n                // console.log(textParagraph);\n\n                $(this).html(textParagraph);\n            });\n\n            // Get all nodes\n            var nodes = d3.selectAll('.node');\n\n            nodes.selectAll('circle')\n                .style('opacity', 0.6)\n                .attr('r', 15);\n\n            nodes.selectAll('text')\n                .style('opacity', 0);\n\n            d3.selectAll('.links').selectAll('line')\n                .style('stroke', '#ccc');\n\n        }\n\n        function mouseover() {\n            // Get data\n            var mouse = d3.mouse(this);\n            var obj = simulation.find(mouse[0], mouse[1]);\n            \n            //////////////////////\n            // Selected element //\n            //////////////////////\n            var nodeSelected = d3.selectAll('.node')\n                .filter(function(d) {\n                    return d.id == obj.id;\n                });\n\n            var textSelected = nodeSelected.select('text')\n                .style('opacity', 1)\n                .style('font-size', 20)\n                .style('font-weight', 'bold');\n\n            nodeSelected.select('circle')\n                .attr('r', 25);\n\n            //////////////////////////////\n            // Highlight adjacent nodes //\n            //////////////////////////////\n            node.selectAll('circle')\n                // .transition()\n                // .duration(20)\n                .style('opacity', function(d) {\n\n                    if (isConnected(obj, d)) {\n                        return 1;\n                    }\n\n                    return 0.6;\n                });\n\n            node.selectAll('text')\n                // .transition()\n                // .duration(20)\n                .style('opacity', function(d) {\n\n                    if (isConnected(obj, d)) {\n                        return 1;\n                    }\n\n                    return 0;\n\n                });\n\n            /////////////////////\n            // Highlight links //\n            /////////////////////\n            link\n                // .transition()\n                // .duration(20)\n                .style('stroke', function(d) {\n                    return d.source.id === obj.id || d.target.id === obj.id ? '#000' : '#ccc';\n                });\n\n\n            ////////////////////////\n            // Unselected element //\n            ////////////////////////\n            var nodeUnselected = d3.selectAll('.node')\n                .filter(function(d) {\n                    return d.id != obj.id;\n                });\n\n            nodeUnselected.select('text')\n                .style('font-size', 16)\n                .style('font-weight', 'normal');\n\n            nodeUnselected.select('circle')\n                .attr('r', 15);\n        }\n\n        function isConnected(a, b) {\n            return isConnectedAsTarget(a, b) || isConnectedAsSource(a, b) || a.index == b.index;\n        }\n\n        function isConnectedAsSource(a, b) {\n            return linkedByIndex[a.index + \",\" + b.index];\n        }\n\n        function isConnectedAsTarget(a, b) {\n            return linkedByIndex[b.index + \",\" + a.index];\n        }\n    },\n\n    saveText: function() {\n        var self = this;\n\n        // Get seconds subject worked for revision\n        var revisionElapsed = (new Date() - this.postPageDurationStart) / 1000;\n\n        // Render loading ring\n        this.$el.find('#editor-full-button-div').html(\n            Handlebars.templates['loading-ring']());\n\n        // Get text\n        var text = app.getParagraphs(this.$el.find('#editor-full-medium-editor'));\n\n        // Save post text to textModel\n        this.textModel.set({'post_text': text,\n                            'post_page_duration': revisionElapsed});\n\n        // Set text to analyzer\n        this.analyzer.set({'text': text});\n\n        // Fetch data\n        this.analyzer.save(null, {\n            success: function(response) {\n                self.sendToServer();\n            },\n            error: function(model, response) {\n                console.log(response.responseText);\n            }\n        });\n    },\n\n    sendToServer: function() {\n        // Save last data \n        this.textModel.set({'post_num_sentences': this.analyzer.get('numSentences'),\n            'post_num_clusters': this.analyzer.get('numClusters'),\n            'post_num_coherent_sentences': this.analyzer.get('cohSentences'),\n            'post_num_non_coherent_sentences': this.analyzer.get('cohNotSentences'),\n            'post_num_concepts': this.analyzer.get('numConcepts')});\n        \n        // Send data to server\n        this.textModel.save(null, {\n            success: function(response) {\n                // Reload page\n                location.reload();\n            },\n            error: function(model, response) {\n                console.log('error');\n            }\n        });\n    }\n\n\n});\n\nnew app.CmapView();\n\n//# sourceMappingURL=data:application/json;base64,\n"],"sourceRoot":"/source/"}