{"version":3,"sources":["cmap-integrated.js"],"names":["app","CmapView","Backbone","View","extend","el","events","click #instruction-read","click #help","click #editor-button","click #editor-full-button","initialize","self","this","prePageDurationStart","postPageDurationStart","colors","d3","scaleOrdinal","schemeCategory10","userModel","UserSpecificModel","textModel","TextModelComplete","analyzer","TextAnalyzerModel","fetch","success","model","response","renderInstruction","error","console","log","$el","html","Handlebars","templates","instruction","get","renderEditor","Date","editor","MediumEditor","toolbar","placeholder","$","editableElement","document","querySelector","firstChild","selectElement","append","renderInstructionModal","openModal","analyzeText","regExText","text","getParagraphs","find","length","Materialize","toast","draftElapsed","set","pre_page_duration","pre_text","save","renderRevision","responseText","pre_num_sentences","pre_num_clusters","pre_num_coherent_sentences","pre_num_non_coherent_sentences","pre_num_concepts","paragraphs","constants","simpleRevisionModal","svgWidth","width","svgHeight","height","renderCmap","saveText","revisionElapsed","replace","post_text","post_page_duration","sendToServer","post_num_sentences","post_num_clusters","post_num_coherent_sentences","post_num_non_coherent_sentences","post_num_concepts","location","reload","pairs","clust","numClusters","svgID","zoomed","g","attr","event","transform","ticked","link","d","source","x","y","target","node","dragstarted","active","simulation","alphaTarget","restart","fx","fy","dragged","dragended","mouseout","each","paragraph","textParagraph","nodes","selectAll","style","mouseover","mouse","obj","nodeSelected","filter","id","textSelected","select","isConnected","nodeUnselected","wordSelected","wordsUnselected","push","index","indexOf","splice","highlightSelectedWord","lemmaDic","clusters","a","b","isConnectedAsTarget","isConnectedAsSource","linkedByIndex","graph","getLinksNodes","margin","window","top","right","bottom","left","svg","forceSimulation","force","forceLink","forceManyBody","strength","forceCenter","forceCollide","iterations","call","zoom","scaleExtent","on","data","links","enter","drag","word","i","inArray"],"mappings":"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","file":"cmap-integrated.js","sourcesContent":["var app = app || {};\n\n\napp.CmapView = Backbone.View.extend({\n\n    el: '#treatment-cmap-integrated',\n\n    events: {\n        'click #instruction-read': 'renderEditor',\n        'click #help': 'renderInstructionModal',\n        'click #editor-button': 'analyzeText',\n        'click #editor-full-button': 'saveText',\n    },\n\n    initialize: function() {\n        // Variable declaration\n        var self = this;\n        this.prePageDurationStart = null;\n        this.postPageDurationStart = null;\n\n        // Generate 20 distinct colors for the cmap\n        this.colors = d3.scaleOrdinal(d3.schemeCategory10);\n        \n        // Get user data\n        this.userModel = new app.UserSpecificModel();\n\n        // Init textanalyzer model\n        this.textModel = new app.TextModelComplete();\n\n        // Init textAnalyzer model\n        this.analyzer = new app.TextAnalyzerModel();\n\n        // Fetch user data\n        this.userModel.fetch({\n            success: function(model, response) {\n                self.renderInstruction();\n            },\n            error: function(model, response) {\n                console.log(response);\n            }\n        });\n\n    },\n\n    /** Render instruction for \n      * this part of the experiment\n      */\n    renderInstruction: function() {\n        // Render instruction\n        this.$el.html(\n            Handlebars.templates.instruction({'instruction':\n                this.userModel.get('instruction')}));\n    },\n\n    /** \n     * When user has read the instruction he or she is able\n     * to write their text.\n     */\n    renderEditor: function() {\n        // Start timer for draft\n        this.prePageDurationStart = new Date();\n\n        // Render editor\n        this.$el.html(Handlebars.templates.editor());\n\n        // Enable editor functionality\n        var editor = new MediumEditor('#editor-textinput', {\n            toolbar: false,\n            placeholder: false,\n        });\n\n        // Add text to editor\n        $('#editor-textinput').html('<p>Schreibe hier ...</p>');\n\n        // Select text so that user can type instantly\n        var editableElement = document.\n            querySelector('#editor-textinput').firstChild;\n        editor.selectElement(editableElement);\n\n        // Append help button to window\n        this.$el.append('<i id=\"help\" class=\"material-icons\">help</i>');\n\n        // Append modal \n        this.$el.append(Handlebars.templates['modal-help']({'instruction':\n            this.userModel.get('instruction') }));\n    },\n\n    /**\n     * Render modal of instruction\n     */\n    renderInstructionModal: function() {\n        $('#modal-help').openModal();\n    },\n\n    /**\n     * After user has written his or her text the \n     * user gets feedback on the draft. \n     * Before users can see the feedback we need \n     * to make some sanity checks whether the \n     * text is long enough.\n     */\n    analyzeText: function() {\n        var self = this;\n\n        // Change text with major concepts\n        app.regExText('#editor-textinput');\n\n        // Get text\n        var text = app.getParagraphs(this.$el.find('#editor-textinput'));\n\n        // Check if text is long enough\n        if (text.length < 1000) {\n            // Display toast\n            Materialize.toast('Ihr Text ist leider zu kurz.', 4000);\n        } else {\n            // Stop timer for draft\n            var draftElapsed = (new Date() - this.prePageDurationStart) / 1000;\n\n            // Start timer for text revision\n            this.postPageDurationStart = new Date();\n\n            // Set draft time and draftText to textModel\n            this.textModel.set({'pre_page_duration': draftElapsed,\n                                'pre_text': text});\n\n            // Render loading ring\n            this.$el.find('#editor-button-div').html(\n                Handlebars.templates['loading-ring']());\n\n            // Get text data\n            this.analyzer.set({'text': text});\n            this.analyzer.save(null, {\n                success: function(response) {\n                    self.renderRevision();\n                },\n                error: function(model, response) {\n                    console.log(response.responseText);\n                }\n            });\n        }\n    },\n\n\n    /**\n     * After user has written the draft she gets the \n     * opportunity to revise her text\n     */\n    renderRevision: function() {\n        var self = this;\n\n        // Render submit button\n        this.$el.find('#editor-button-div').html(\n                '<a class=\"waves-effect waves-light btn\" id=\"save-text\">Text abschicken</a>');\n\n        // Save data for draft\n        this.textModel.set({'pre_text': this.analyzer.get('text'),\n            'pre_num_sentences': this.analyzer.get('numSentences'),\n            'pre_num_clusters': this.analyzer.get('numClusters'),\n            'pre_num_coherent_sentences': this.analyzer.get('cohSentences'),\n            'pre_num_non_coherent_sentences': this.analyzer.get('cohNotSentences'),\n            'pre_num_concepts': this.analyzer.get('numConcepts')});\n\n        // Get inner html of text input\n        this.paragraphs = $('#editor-textinput').html();\n\n        // Change inner html\n        this.$el.html(Handlebars.templates['editor-full']({'instruction':\n            app.constants.simpleRevisionModal}));\n\n        //  Append help button to window\n        this.$el.append('<i id=\"help\" class=\"material-icons\">help</i>');\n\n        // Append modal \n        this.$el.append(Handlebars.templates['modal-help']({'instruction':\n            this.userModel.get('instructionreview') }));\n\n        // Change inner html of editor\n        $('#editor-full-medium-editor').html(this.paragraphs);\n\n        // Enable editor functionality\n        var editor = new MediumEditor('#editor-full-medium-editor', {\n            toolbar: false,\n        });\n\n        // Change text of Button\n        $('#editor-full-button').text('Text abschicken');\n\n        // Display modal\n        this.$el.append(Handlebars.templates['modal-help']({'instruction':\n            this.userModel.get('instructionreview')}));\n        $('#modal-help').openModal();\n\n        // Set width of height of svg element\n        var svgWidth = $('#editor-full-graph').width();\n        var svgHeight = $('#editor-full-medium-editor').height();\n\n        // Render graph\n        this.renderCmap(this.analyzer.get('word_pairs'),\n            this.analyzer.get('clusters'), this.analyzer.get('numClusters'),\n            '#editor-full-graph', svgHeight, svgWidth, this.colors);\n    },\n\n\n    saveText: function() {\n        var self = this;\n\n        // Get seconds subject worked for revision\n        var revisionElapsed = (new Date() - this.postPageDurationStart) / 1000;\n\n        // Render loading ring\n        this.$el.find('#editor-full-button-div').html(\n            Handlebars.templates['loading-ring']());\n\n        // Get text\n        var text = app.getParagraphs(this.$el.find('#editor-full-medium-editor'));\n\n        // Remove unnecessary white spaces\n        text = text.replace(/\\s\\,/g, ',');\n        text = text.replace(/\\s\\./g, '.');\n        text = text.replace(/\\s!/g, '!');\n        text = text.replace(/\\[\\s/g, '[');\n        text = text.replace(/\\s&/g, '&');\n        text = text.replace(/\\s`/g, '`');\n        text = text.replace(/\\s~/g, '~');\n        text = text.replace(/\\s;/g, ';');\n        text = text.replace(/\\s_/g, '_');\n        text = text.replace(/\\s]/g, ']');\n        text = text.replace(/\\s:/g, ':');\n        text = text.replace(/\\s\\?/g, '?');\n        text = text.replace(/\\(\\s/g, '(');\n        text = text.replace(/\\s\\)/g, ')');\n        text = text.replace(/\\s\\//g, '/');\n\n        // Save post text to textModel\n        this.textModel.set({'post_text': text,\n                            'post_page_duration': revisionElapsed});\n\n        // Set text to analyzer\n        this.analyzer.set({'text': text});\n\n        // Fetch data\n        this.analyzer.save(null, {\n            success: function(response) {\n                self.sendToServer();\n            },\n            error: function(model, response) {\n                console.log(response.responseText);\n            }\n        });\n    },\n\n    sendToServer: function() {\n        // Save last data \n        this.textModel.set({'post_num_sentences': this.analyzer.get('numSentences'),\n            'post_num_clusters': this.analyzer.get('numClusters'),\n            'post_num_coherent_sentences': this.analyzer.get('cohSentences'),\n            'post_num_non_coherent_sentences': this.analyzer.get('cohNotSentences'),\n            'post_num_concepts': this.analyzer.get('numConcepts')});\n        \n        // Send data to server\n        this.textModel.save(null, {\n            success: function(response) {\n                // Reload page\n                location.reload();\n            },\n            error: function(model, response) {\n                console.log('error');\n            }\n        });\n    },\n\n\n    renderCmap: function(pairs, clust, numClusters, svgID, height, width, colors)  {\n        var self = this;\n    \n        // ****************** Render SVG ***************************************\n        // Variable declaration\n        var clusters = clust;\n        var lemmaDic = this.analyzer.get('lemmaDic');\n        var graph = app.getLinksNodes(pairs);\n\n        // // Adjust height of svg\n        var svgHeight = height;\n        var svgWidth = width;\n        var windowHeight = $(window).height();\n\n        // Set margin and width\n        var margin = {top: 0, right: 0, bottom: 0, left: 0};\n\n        // Select svg\n        var svg = d3.select(svgID).append(\"svg\")\n            .attr(\"width\", svgWidth + margin.left + margin.right)\n            .attr(\"height\", svgHeight + margin.top + margin.bottom);\n\n        // Append rectangle to svg\n        var rect = svg.append(\"rect\")\n            .attr(\"width\", svgWidth)\n            .attr(\"height\", svgHeight)\n            .style(\"fill\", \"none\")\n            .style(\"pointer-events\", \"all\");\n\n        // Create new force simulation\n        var simulation = d3.forceSimulation()\n            .force('link', d3.forceLink().id(function(d) {\n                return d.id;\n            }))\n            .force('charge', d3.forceManyBody().strength(50))\n            .force('center', d3.forceCenter(svgWidth / 2, svgHeight / 2))\n            .force('collide', d3.forceCollide(40).iterations(60));\n\n        ///////////////////////////////\n        // Enable zoom functionality //\n        ///////////////////////////////\n        \n        // Call zoom\n        svg.call(d3.zoom()\n            .scaleExtent([1 / 10, 10])\n            .on('zoom', zoomed));\n\n        // Wrap everything in g element\n        var g = svg.append('g')\n            .on('mouseover', mouseover)\n            .on('mouseout', mouseout);\n\n        /**\n         * Zoom function\n         */\n        function zoomed() {\n            g.attr('transform', d3.event.transform);\n        }\n        \n        // Add links\n        var link = g.append('g')\n            .attr('class', 'links')\n            .selectAll('line')\n            .data(graph.links)\n            .enter().append('line');\n\n        // Create g element that stores\n        // circles and text and call dragging on it\n        var node = g.append('g')\n            .attr('class', 'nodes')\n            .selectAll('.node')\n            .data(graph.nodes)\n            .enter().append('g')\n            .attr('class', 'node')\n            .call(d3.drag()\n                .on('start', dragstarted)\n                .on('drag', dragged)\n                .on('end', dragended));\n        \n        // Append cirles to node\n        var circles = node.append('circle')\n            // .attr('class', 'nodes')\n            .attr('r', 15)\n            .attr('cx', 0)\n            .attr('cy', 0)\n            // .attr('ry', 2)\n            .style(\"fill\", function (word) {\n                // Loop over every cluster\n                for (var i = 0; i < clusters.length; i++) {\n                    // Check if current word is in current Array\n                    if ($.inArray(word.id, clusters[i]) != -1) {\n                        // Return color if word war found in array\n                        return colors(i);\n                    }\n                }\n            })\n            .style('opacity', 0.6);\n\n        // Append label to node container\n        var label = node.append('text')\n            .attr('dy', '-.35em')\n            .attr('dx', '1.4em')\n            .text(function(d) {\n                return d.id;\n            });\n\n        // Add nodes to simulation\n        simulation\n            .nodes(graph.nodes)\n            .on('tick', ticked);\n\n        // Add links to simulation\n        simulation.force('link')\n            .links(graph.links);\n\n        var linkedByIndex = {};\n            link.each(function(d) {\n                linkedByIndex[d.source.index + \",\" + d.target.index] = true;\n            });\n\n        /**\n         * Tick function adds x and y\n         * coordinates to nodes and links\n         */\n        function ticked() {\n            // Update links\n            link\n                .attr('x1', function(d) { return d.source.x; })\n                .attr('y1', function(d) { return d.source.y; })\n                .attr('x2', function(d) { return d.target.x; })\n                .attr('y2', function(d) { return d.target.y; });\n\n            // Update nodes\n            node.attr('transform', function(d) {\n                return 'translate(' + d.x + ',' + d.y + ')';\n            });\n        }\n\n        function dragstarted(d) {\n            if (!d3.event.active) simulation.alphaTarget(0.3).restart();\n            d.fx = d.x;\n            d.fy = d.y;\n        }\n\n        function dragged(d) {\n            d.fx = d3.event.x;\n            d.fy = d3.event.y;\n        }\n\n        function dragended(d) {\n            if (!d3.event.active) simulation.alphaTarget(0);\n            d.fx = null;\n            d.fy = null;\n        }\n\n        function mouseout() {\n            $('#editor-full-medium-editor').find('p').each(function(paragraph) {\n                var textParagraph = $(this).text();\n                // console.log(textParagraph);\n\n                $(this).html(textParagraph);\n            });\n\n            // Get all nodes\n            var nodes = d3.selectAll('.node');\n\n            nodes.selectAll('circle')\n                .style('opacity', 0.6)\n                .attr('r', 15);\n\n            nodes.selectAll('text')\n                .style('opacity', 0);\n\n            d3.selectAll('.links').selectAll('line')\n                .style('stroke', '#ccc');\n\n        }\n\n        function mouseover() {\n            // Get data\n            var mouse = d3.mouse(this);\n            var obj = simulation.find(mouse[0], mouse[1]);\n            \n            //////////////////////\n            // Selected element //\n            //////////////////////\n            var nodeSelected = d3.selectAll('.node')\n                .filter(function(d) {\n                    return d.id == obj.id;\n                });\n\n            var textSelected = nodeSelected.select('text')\n                .style('opacity', 1)\n                .style('font-size', 20)\n                .style('font-weight', 'bold');\n\n            nodeSelected.select('circle')\n                .attr('r', 25);\n\n            //////////////////////////////\n            // Highlight adjacent nodes //\n            //////////////////////////////\n            node.selectAll('circle')\n                // .transition()\n                // .duration(20)\n                .style('opacity', function(d) {\n\n                    if (isConnected(obj, d)) {\n                        return 1;\n                    }\n\n                    return 0.6;\n                });\n\n            node.selectAll('text')\n                // .transition()\n                // .duration(20)\n                .style('opacity', function(d) {\n\n                    if (isConnected(obj, d)) {\n                        return 1;\n                    }\n\n                    return 0;\n\n                });\n\n            /////////////////////\n            // Highlight links //\n            /////////////////////\n            link\n                // .transition()\n                // .duration(20)\n                .style('stroke', function(d) {\n                    return d.source.id === obj.id || d.target.id === obj.id ? '#000' : '#ccc';\n                });\n\n\n            ////////////////////////\n            // Unselected element //\n            ////////////////////////\n            var nodeUnselected = d3.selectAll('.node')\n                .filter(function(d) {\n                    return d.id != obj.id;\n                });\n\n            nodeUnselected.select('text')\n                .style('font-size', 16)\n                .style('font-weight', 'normal');\n\n            nodeUnselected.select('circle')\n                .attr('r', 15);\n\n            /////////////////////////////\n            // Highlight words in text //\n            /////////////////////////////\n            \n            // We need to get the text of the selected word in order\n            // to highlight them\n            var wordSelected = textSelected.text();\n            \n            // Get all words that are semantically related\n            // to the selected word\n            var wordsUnselected = [];\n            node.selectAll('text')\n                .each(function(d) {\n                    if (isConnected(obj, d)) {\n                        wordsUnselected.push(d.id);\n                    }\n                });\n\n            // Remove selected word\n            var index = wordsUnselected.indexOf(wordSelected);\n\n            // Update unselected words without selected word\n            wordsUnselected.splice(index, 1);\n\n            app.highlightSelectedWord('#editor-full-medium-editor', wordSelected,\n                wordsUnselected, lemmaDic, clusters, self.colors);\n        }\n\n        function isConnected(a, b) {\n            return isConnectedAsTarget(a, b) || isConnectedAsSource(a, b) || a.index == b.index;\n        }\n\n        function isConnectedAsSource(a, b) {\n            return linkedByIndex[a.index + \",\" + b.index];\n        }\n\n        function isConnectedAsTarget(a, b) {\n            return linkedByIndex[b.index + \",\" + a.index];\n        }\n    }\n\n\n});\n\nnew app.CmapView();\n\n//# sourceMappingURL=data:application/json;base64,\n"],"sourceRoot":"/source/"}