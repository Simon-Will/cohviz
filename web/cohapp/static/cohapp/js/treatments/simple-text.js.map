{"version":3,"sources":["simple-text.js"],"names":["app","SimpleRevisionView","Backbone","View","extend","el","events","click #instruction-read","click #help","click #editor-button","initialize","self","this","prePageDurationStart","postPageDurationStart","userModel","UserSpecificModel","textModel","TextModelComplete","analyzer","TextAnalyzerModel","fetch","success","model","response","renderInstruction","error","console","log","$el","html","Handlebars","templates","instruction","get","renderEditor","Date","editor","MediumEditor","toolbar","placeholder","$","editableElement","document","querySelector","firstChild","selectElement","append","renderInstructionModal","openModal","analyzeText","regExText","text","getParagraphs","find","length","Materialize","toast","draftElapsed","set","pre_page_duration","pre_text","save","saveText","responseText","post_text","post_page_duration","pre_num_sentences","pre_num_clusters","pre_num_coherent_sentences","pre_num_non_coherent_sentences","pre_num_concepts","post_num_sentences","post_num_clusters","post_num_coherent_sentences","post_num_non_coherent_sentences","post_num_concepts","location","reload"],"mappings":"AAAA,GAAIA,KAAMA,OAEVA,KAAIC,mBAAqBC,SAASC,KAAKC,QAEnCC,GAAI,6BAEJC,QACIC,0BAA2B,eAC3BC,cAAe,yBACfC,uBAAwB,eAI5BC,WAAY,WAER,GAAIC,GAAOC,IACXA,MAAKC,qBAAuB,KAC5BD,KAAKE,sBAAwB,KAG7BF,KAAKG,UAAY,GAAIf,KAAIgB,kBAGzBJ,KAAKK,UAAY,GAAIjB,KAAIkB,kBAGzBN,KAAKO,SAAW,GAAInB,KAAIoB,kBAGxBR,KAAKG,UAAUM,OACXC,QAAS,SAASC,EAAOC,GACrBb,EAAKc,qBAETC,MAAO,SAASH,EAAOC,GACnBG,QAAQC,IAAIJ,OAQxBC,kBAAmB,WAEfb,KAAKiB,IAAIC,KACLC,WAAWC,UAAUC,aAAaA,YAC9BrB,KAAKG,UAAUmB,IAAI,mBAO/BC,aAAc,WAEVvB,KAAKC,qBAAuB,GAAIuB,MAGhCxB,KAAKiB,IAAIC,KAAKC,WAAWC,UAAUK,SAGnC,IAAIA,GAAS,GAAIC,cAAa,qBAC1BC,SAAS,EACTC,aAAa,GAIjBC,GAAE,qBAAqBX,KAAK,2BAG5B,IAAIY,GAAkBC,SAClBC,cAAc,qBAAqBC,UACvCR,GAAOS,cAAcJ,GAGrB9B,KAAKiB,IAAIkB,OAAO,gDAGhBnC,KAAKiB,IAAIkB,OAAOhB,WAAWC,UAAU,eAAeC,YAChDrB,KAAKG,UAAUmB,IAAI,mBAM3Bc,uBAAwB,WACpBP,EAAE,eAAeQ,aAUrBC,YAAa,WACT,GAAIvC,GAAOC,IAGXZ,KAAImD,UAAU,oBAGd,IAAIC,GAAOpD,IAAIqD,cAAczC,KAAKiB,IAAIyB,KAAK,qBAG3C,IAAIF,EAAKG,OAAS,IAEdC,YAAYC,MAAM,+BAAgC,SAC/C,CAEH,GAAIC,IAAgB,GAAItB,MAASxB,KAAKC,sBAAwB,GAM9DD,MAAKK,UAAU0C,KAAKC,kBAAqBF,EACrBG,SAAYT,IAGhCxC,KAAKiB,IAAIyB,KAAK,sBAAsBxB,KAChCC,WAAWC,UAAU,mBAGzBpB,KAAKO,SAASwC,KAAKP,KAAQA,IAC3BxC,KAAKO,SAAS2C,KAAK,MACfxC,QAAS,SAASE,GACdb,EAAKoD,YAETrC,MAAO,SAASH,EAAOC,GACnBG,QAAQC,IAAIJ,EAASwC,mBAMrCD,SAAU,YAIiB,GAAI3B,MAASxB,KAAKE,uBAAyB,GAGlEF,MAAKiB,IAAIyB,KAAK,sBAAsBxB,KAChCC,WAAWC,UAAU,kBAGzB,IAAIoB,GAAOpD,IAAIqD,cAAczC,KAAKiB,IAAIyB,KAAK,qBAG3C1C,MAAKK,UAAU0C,KAAKM,UAAab,EAC7Bc,mBAAsB,EACtBC,kBAAqBvD,KAAKO,SAASe,IAAI,gBACvCkC,iBAAoBxD,KAAKO,SAASe,IAAI,eACtCmC,2BAA8BzD,KAAKO,SAASe,IAAI,gBAChDoC,+BAAkC1D,KAAKO,SAASe,IAAI,mBACpDqC,iBAAoB3D,KAAKO,SAASe,IAAI,eACtCsC,mBAAsB5D,KAAKO,SAASe,IAAI,gBACxCuC,kBAAqB7D,KAAKO,SAASe,IAAI,eACvCwC,4BAA+B9D,KAAKO,SAASe,IAAI,gBACjDyC,gCAAmC/D,KAAKO,SAASe,IAAI,mBACrD0C,kBAAqBhE,KAAKO,SAASe,IAAI,iBAG3CtB,KAAKK,UAAU6C,KAAK,MAChBxC,QAAS,SAASE,GAEdqD,SAASC,UAEbpD,MAAO,SAASH,EAAOC,GACnBgC,YAAYC,MAAM,6CAA8C,WAMhF,GAAIzD,KAAIC","file":"simple-text.js","sourcesContent":["var app = app || {};\n\napp.SimpleRevisionView = Backbone.View.extend({\n    \n    el: '#treatment-simple-revision',\n\n    events: {\n        'click #instruction-read': 'renderEditor',\n        'click #help': 'renderInstructionModal',\n        'click #editor-button': 'analyzeText',\n        // 'click #save-text': 'saveText',\n    },\n\n    initialize: function() {\n        // Variable declaration\n        var self = this;\n        this.prePageDurationStart = null;\n        this.postPageDurationStart = null;\n        \n        // Get user data\n        this.userModel = new app.UserSpecificModel();\n\n        // Init textanalyzer model\n        this.textModel = new app.TextModelComplete();\n\n        // Init textAnalyzer model\n        this.analyzer = new app.TextAnalyzerModel();\n\n        // Fetch user data\n        this.userModel.fetch({\n            success: function(model, response) {\n                self.renderInstruction();\n            },\n            error: function(model, response) {\n                console.log(response);\n            }\n        });\n    },\n\n    /** Render instruction for \n      * this part of the experiment\n      */\n    renderInstruction: function() {\n        // Render instruction\n        this.$el.html(\n            Handlebars.templates.instruction({'instruction':\n                this.userModel.get('instruction')}));\n    },\n\n    /** \n     * When user has read the instruction he or she is able\n     * to write their text.\n     */\n    renderEditor: function() {\n        // Start timer for draft\n        this.prePageDurationStart = new Date();\n\n        // Render editor\n        this.$el.html(Handlebars.templates.editor());\n\n        // Enable editor functionality\n        var editor = new MediumEditor('#editor-textinput', {\n            toolbar: false,\n            placeholder: false,\n        });\n\n        // Add text to editor\n        $('#editor-textinput').html('<p>Schreibe hier ...</p>');\n\n        // Select text so that user can type instantly\n        var editableElement = document.\n            querySelector('#editor-textinput').firstChild;\n        editor.selectElement(editableElement);\n\n        // Append help button to window\n        this.$el.append('<i id=\"help\" class=\"material-icons\">help</i>');\n\n        // Append modal \n        this.$el.append(Handlebars.templates['modal-help']({'instruction':\n            this.userModel.get('instruction') }));\n    },\n\n    /**\n     * Render modal of instruction\n     */\n    renderInstructionModal: function() {\n        $('#modal-help').openModal();\n    },\n\n    /**\n     * After user has written his or her text the \n     * user gets feedback on the draft. \n     * Before users can see the feedback we need \n     * to make some sanity checks whether the \n     * text is long enough.\n     */\n    analyzeText: function() {\n        var self = this;\n\n        // Change text with major concepts\n        app.regExText('#editor-textinput');\n\n        // Get text\n        var text = app.getParagraphs(this.$el.find('#editor-textinput'));\n\n        // Check if text is long enough\n        if (text.length < 1000) {\n            // Display toast\n            Materialize.toast('Ihr Text ist leider zu kurz.', 4000);\n        } else {\n            // Stop timer for draft\n            var draftElapsed = (new Date() - this.prePageDurationStart) / 1000;\n\n            // // Start timer for text revision\n            // this.postPageDurationStart = new Date();\n\n            // Set draft time and draftText to textModel\n            this.textModel.set({'pre_page_duration': draftElapsed,\n                                'pre_text': text});\n\n            // Render loading ring\n            this.$el.find('#editor-button-div').html(\n                Handlebars.templates['loading-ring']());\n\n            // Get text data\n            this.analyzer.set({'text': text});\n            this.analyzer.save(null, {\n                success: function(response) {\n                    self.saveText();\n                },\n                error: function(model, response) {\n                    console.log(response.responseText);\n                }\n            });\n        }\n    },\n\n    saveText: function() {\n        var self = this;\n\n        // Get seconds subject worked for revision\n        var revisionElapsed = (new Date() - this.postPageDurationStart) / 1000;\n\n        // Render loading ring\n        this.$el.find('#editor-button-div').html(\n            Handlebars.templates['loading-ring']());\n\n        // Get text\n        var text = app.getParagraphs(this.$el.find('#editor-textinput'));\n\n        // Save post text to textModel\n        this.textModel.set({'post_text': text,\n            'post_page_duration': 0,\n            'pre_num_sentences': this.analyzer.get('numSentences'),\n            'pre_num_clusters': this.analyzer.get('numClusters'),\n            'pre_num_coherent_sentences': this.analyzer.get('cohSentences'),\n            'pre_num_non_coherent_sentences': this.analyzer.get('cohNotSentences'),\n            'pre_num_concepts': this.analyzer.get('numConcepts'),\n            'post_num_sentences': this.analyzer.get('numSentences'),\n            'post_num_clusters': this.analyzer.get('numClusters'),\n            'post_num_coherent_sentences': this.analyzer.get('cohSentences'),\n            'post_num_non_coherent_sentences': this.analyzer.get('cohNotSentences'),\n            'post_num_concepts': this.analyzer.get('numConcepts')});\n\n        // Send data to server\n        this.textModel.save(null, {\n            success: function(response) {\n                // Reload page\n                location.reload();\n            },\n            error: function(model, response) {\n                Materialize.toast('Dein Text konnte nicht gespeichert werden.', 4000);\n            }\n        });\n    }\n});\n\nnew app.SimpleRevisionView();\n\n//# sourceMappingURL=data:application/json;base64,\n"],"sourceRoot":"/source/"}